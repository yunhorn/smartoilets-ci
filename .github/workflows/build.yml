name: build

on:
  workflow_dispatch:
    inputs:
      triggerIssueId:
        description: 'issueId'
        required: false
      customParam:
        description: 'customParam'
        required: false
      ghevent:
        description: 'ghevent'
        required: false
      ciname: 
        description: 'ghevent'
        required: false

jobs:

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      packages: write
      issues: write
      pull-requests: write
      actions: write

    steps:
    - name: Set up JDK
      id: setup-java
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - uses: oras-project/setup-oras@v1
      with:
        version: 1.0.0

    - name: build
      env:
        GHEVENT: ${{ github.event.inputs.ghevent }}
        CINAME: build
        GH_TOKEN: ${{ github.token }}
        CURRENT_GHEVENT: ${{ toJSON(github.event) }}
      run: |
        oras login -uyunhorn -p${{ secrets.GITHUB_TOKEN }} ghcr.io
        oras pull ghcr.io/yunhorn/files:build
        chmod +x build.sh
        ./build.sh


  rebuild-cache:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      packages: write
      issues: write
      pull-requests: write
      actions: write

    steps:
    - name: Set up JDK
      id: setup-java
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'

    - uses: oras-project/setup-oras@v1
      with:
        version: 1.0.0

    - name: build
      env:
        GHEVENT: ${{ github.event.inputs.ghevent }}
        CINAME: cicache
        GH_TOKEN: ${{ github.token }}
        CURRENT_GHEVENT: ${{ toJSON(github.event) }}
      run: |
        oras pull -uyunhorn -p${{ secrets.GITHUB_TOKEN }} ghcr.io/yunhorn/files:build
        chmod +x build.sh
        ./build.sh

  prlabel:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      packages: write
      issues: write
      pull-requests: write
      actions: write

    steps:
    - uses: oras-project/setup-oras@v1
      with:
        version: 1.0.0

    - name: label
      env:
        GHEVENT: ${{ github.event.inputs.ghevent }}
        CINAME: prlabel
        GH_TOKEN: ${{ github.token }}
        CURRENT_GHEVENT: ${{ toJSON(github.event) }}
      run: |
        oras pull -uyunhorn -p${{ secrets.GITHUB_TOKEN }} ghcr.io/yunhorn/files:build
        chmod +x build.sh
        ./build.sh

  watcher:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    needs:
    - prlabel 
    - rebuild-cache
    - build
    - ci
    permissions:
      packages: write
      issues: write
      pull-requests: write
      actions: write

    steps:

    - uses: oras-project/setup-oras@v1
      with:
        version: 1.0.0

    - name: build
      env:
        GHEVENT: ${{ github.event.inputs.ghevent }}
        CINAME: watcher
        GH_TOKEN: ${{ github.token }}
        CURRENT_GHEVENT: ${{ toJSON(github.event) }}
      run: |
        oras pull -uyunhorn -p${{ secrets.GITHUB_TOKEN }} ghcr.io/yunhorn/files:build
        chmod +x build.sh
        ./build.sh

  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        java_version: 
          - '17'
          - '21'
    permissions:
      packages: write
      issues: write
      pull-requests: write
      actions: write
    steps:
    - uses: oras-project/setup-oras@v1
      with:
        version: 1.0.0
    - name: Set up JDK
      id: setup-java
      uses: actions/setup-java@v4
      with:
      #TODO inputs.java_version
        java-version: ${{ matrix.java_version }}
        distribution: 'temurin'
        # cache: 'maven'
    - name: ci
      env:
        GHEVENT: ${{ github.event.inputs.ghevent }}
        CINAME: ci
        GH_TOKEN: ${{ github.token }}
        CURRENT_GHEVENT: ${{ toJSON(github.event) }}
      run: |
        oras login -uyunhorn -p${{ secrets.GITHUB_TOKEN }} ghcr.io
        oras pull -uyunhorn -p${{ secrets.GITHUB_TOKEN }} ghcr.io/yunhorn/files:build
        chmod +x build.sh
        ./build.sh
